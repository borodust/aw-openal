;; Generated by :claw at 2021-09-22T20:41:43.553981Z
(uiop:define-package :%al (:use))
(uiop:define-package :aw-openal-bindings~pristine (:use :cl))
(common-lisp:in-package :aw-openal-bindings~pristine)

(defparameter %al::+api+ nil)

(defparameter %al::+apientry+ nil)

(defparameter %al::+%h+ nil)

(defparameter %al::+api+ nil)

(defparameter %al::+apientry+ nil)

(defparameter %al::+bits+ 8194)

(defparameter %al::+buffer+ 4105)

(defparameter %al::+buffers-processed+ 4118)

(defparameter %al::+buffers-queued+ 4117)

(defparameter %al::+byte-offset+ 4134)

(defparameter %al::+channels+ 8195)

(defparameter %al::+cone-inner-angle+ 4097)

(defparameter %al::+cone-outer-angle+ 4098)

(defparameter %al::+cone-outer-gain+ 4130)

(defparameter %al::+direction+ 4101)

(defparameter %al::+distance-model+ 53248)

(defparameter %al::+doppler-factor+ 49152)

(defparameter %al::+doppler-velocity+ 49153)

(defparameter %al::+exponent-distance+ 53253)

(defparameter %al::+exponent-distance-clamped+ 53254)

(defparameter %al::+extensions+ 45060)

(defparameter %al::+false+ 0)

(defparameter %al::+format-mono16+ 4353)

(defparameter %al::+format-mono8+ 4352)

(defparameter %al::+format-stereo16+ 4355)

(defparameter %al::+format-stereo8+ 4354)

(defparameter %al::+frequency+ 8193)

(defparameter %al::+gain+ 4106)

(defparameter %al::+illegal-command+ 40964)

(defparameter %al::+illegal-enum+ 40962)

(defparameter %al::+initial+ 4113)

(defparameter %al::+invalid+ -1)

(defparameter %al::+invalid-enum+ 40962)

(defparameter %al::+invalid-name+ 40961)

(defparameter %al::+invalid-operation+ 40964)

(defparameter %al::+invalid-value+ 40963)

(defparameter %al::+inverse-distance+ 53249)

(defparameter %al::+inverse-distance-clamped+ 53250)

(defparameter %al::+linear-distance+ 53251)

(defparameter %al::+linear-distance-clamped+ 53252)

(defparameter %al::+looping+ 4103)

(defparameter %al::+max-distance+ 4131)

(defparameter %al::+max-gain+ 4110)

(defparameter %al::+min-gain+ 4109)

(defparameter %al::+none+ 0)

(defparameter %al::+no-error+ 0)

(defparameter %al::+orientation+ 4111)

(defparameter %al::+out-of-memory+ 40965)

(defparameter %al::+paused+ 4115)

(defparameter %al::+pending+ 8209)

(defparameter %al::+pitch+ 4099)

(defparameter %al::+playing+ 4114)

(defparameter %al::+position+ 4100)

(defparameter %al::+processed+ 8210)

(defparameter %al::+reference-distance+ 4128)

(defparameter %al::+renderer+ 45059)

(defparameter %al::+rolloff-factor+ 4129)

(defparameter %al::+sample-offset+ 4133)

(defparameter %al::+sec-offset+ 4132)

(defparameter %al::+size+ 8196)

(defparameter %al::+source-relative+ 514)

(defparameter %al::+source-state+ 4112)

(defparameter %al::+source-type+ 4135)

(defparameter %al::+speed-of-sound+ 49155)

(defparameter %al::+static+ 4136)

(defparameter %al::+stopped+ 4116)

(defparameter %al::+streaming+ 4137)

(defparameter %al::+true+ 1)

(defparameter %al::+undetermined+ 4144)

(defparameter %al::+unused+ 8208)

(defparameter %al::+velocity+ 4102)

(defparameter %al::+vendor+ 45057)

(defparameter %al::+version+ 45058)

(defparameter %al::+version-1-0+ nil)

(defparameter %al::+version-1-1+ nil)

(cffi:defctype %al::uint :unsigned-int)

(cffi:defctype %al::enum :int)

(cffi:defctype %al::float :float)

(declaim (inline %al::buffer3f))

(cffi:defcfun ("alBuffer3f" %al::buffer3f)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value1 %al::float)
              (%al::value2 %al::float)
              (%al::value3 %al::float))

(cffi:defctype %al::int :int)

(declaim (inline %al::buffer3i))

(cffi:defcfun ("alBuffer3i" %al::buffer3i)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value1 %al::int)
              (%al::value2 %al::int)
              (%al::value3 %al::int))

(cffi:defctype %al::void :void)

(cffi:defctype %al::sizei :int)

(declaim (inline %al::buffer-data))

(cffi:defcfun ("alBufferData" %al::buffer-data)
              :void
              (%al::buffer %al::uint)
              (%al::format %al::enum)
              (%al::data (claw-utils:claw-pointer %al::void))
              (%al::size %al::sizei)
              (%al::freq %al::sizei))

(declaim (inline %al::bufferf))

(cffi:defcfun ("alBufferf" %al::bufferf)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value %al::float))

(declaim (inline %al::bufferfv))

(cffi:defcfun ("alBufferfv" %al::bufferfv)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::bufferi))

(cffi:defcfun ("alBufferi" %al::bufferi)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value %al::int))

(declaim (inline %al::bufferiv))

(cffi:defcfun ("alBufferiv" %al::bufferiv)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::delete-buffers))

(cffi:defcfun ("alDeleteBuffers" %al::delete-buffers)
              :void
              (%al::n %al::sizei)
              (%al::buffers (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::delete-sources))

(cffi:defcfun ("alDeleteSources" %al::delete-sources)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::disable))

(cffi:defcfun ("alDisable" %al::disable)
              :void
              (%al::capability %al::enum))

(declaim (inline %al::distance-model))

(cffi:defcfun ("alDistanceModel" %al::distance-model)
              :void
              (%al::distance-model %al::enum))

(declaim (inline %al::doppler-factor))

(cffi:defcfun ("alDopplerFactor" %al::doppler-factor)
              :void
              (%al::value %al::float))

(declaim (inline %al::doppler-velocity))

(cffi:defcfun ("alDopplerVelocity" %al::doppler-velocity)
              :void
              (%al::value %al::float))

(declaim (inline %al::enable))

(cffi:defcfun ("alEnable" %al::enable)
              :void
              (%al::capability %al::enum))

(declaim (inline %al::gen-buffers))

(cffi:defcfun ("alGenBuffers" %al::gen-buffers)
              :void
              (%al::n %al::sizei)
              (%al::buffers (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::gen-sources))

(cffi:defcfun ("alGenSources" %al::gen-sources)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(cffi:defctype %al::boolean :char)

(declaim (inline %al::get-boolean))

(cffi:defcfun ("alGetBoolean" %al::get-boolean)
              %al::boolean
              (%al::param %al::enum))

(declaim (inline %al::get-booleanv))

(cffi:defcfun ("alGetBooleanv" %al::get-booleanv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::boolean)))

(declaim (inline %al::get-buffer3f))

(cffi:defcfun ("alGetBuffer3f" %al::get-buffer3f)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::float))
              (%al::value2 (claw-utils:claw-pointer %al::float))
              (%al::value3 (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-buffer3i))

(cffi:defcfun ("alGetBuffer3i" %al::get-buffer3i)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::int))
              (%al::value2 (claw-utils:claw-pointer %al::int))
              (%al::value3 (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-bufferf))

(cffi:defcfun ("alGetBufferf" %al::get-bufferf)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-bufferfv))

(cffi:defcfun ("alGetBufferfv" %al::get-bufferfv)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-bufferi))

(cffi:defcfun ("alGetBufferi" %al::get-bufferi)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-bufferiv))

(cffi:defcfun ("alGetBufferiv" %al::get-bufferiv)
              :void
              (%al::buffer %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(cffi:defctype %al::double :double)

(declaim (inline %al::get-double))

(cffi:defcfun ("alGetDouble" %al::get-double)
              %al::double
              (%al::param %al::enum))

(declaim (inline %al::get-doublev))

(cffi:defcfun ("alGetDoublev" %al::get-doublev)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::double)))

(cffi:defctype %al::char :char)

(declaim (inline %al::get-enum-value))

(cffi:defcfun ("alGetEnumValue" %al::get-enum-value)
              %al::enum
              (%al::ename (claw-utils:claw-pointer %al::char)))

(declaim (inline %al::get-error))

(cffi:defcfun ("alGetError" %al::get-error) %al::enum)

(declaim (inline %al::get-float))

(cffi:defcfun ("alGetFloat" %al::get-float)
              %al::float
              (%al::param %al::enum))

(declaim (inline %al::get-floatv))

(cffi:defcfun ("alGetFloatv" %al::get-floatv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-integer))

(cffi:defcfun ("alGetInteger" %al::get-integer)
              %al::int
              (%al::param %al::enum))

(declaim (inline %al::get-integerv))

(cffi:defcfun ("alGetIntegerv" %al::get-integerv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-listener3f))

(cffi:defcfun ("alGetListener3f" %al::get-listener3f)
              :void
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::float))
              (%al::value2 (claw-utils:claw-pointer %al::float))
              (%al::value3 (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-listener3i))

(cffi:defcfun ("alGetListener3i" %al::get-listener3i)
              :void
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::int))
              (%al::value2 (claw-utils:claw-pointer %al::int))
              (%al::value3 (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-listenerf))

(cffi:defcfun ("alGetListenerf" %al::get-listenerf)
              :void
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-listenerfv))

(cffi:defcfun ("alGetListenerfv" %al::get-listenerfv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-listeneri))

(cffi:defcfun ("alGetListeneri" %al::get-listeneri)
              :void
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-listeneriv))

(cffi:defcfun ("alGetListeneriv" %al::get-listeneriv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-proc-address))

(cffi:defcfun ("alGetProcAddress" %al::get-proc-address)
              (claw-utils:claw-pointer :void)
              (%al::fname (claw-utils:claw-pointer %al::char)))

(declaim (inline %al::get-source3f))

(cffi:defcfun ("alGetSource3f" %al::get-source3f)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::float))
              (%al::value2 (claw-utils:claw-pointer %al::float))
              (%al::value3 (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-source3i))

(cffi:defcfun ("alGetSource3i" %al::get-source3i)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value1 (claw-utils:claw-pointer %al::int))
              (%al::value2 (claw-utils:claw-pointer %al::int))
              (%al::value3 (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-sourcef))

(cffi:defcfun ("alGetSourcef" %al::get-sourcef)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-sourcefv))

(cffi:defcfun ("alGetSourcefv" %al::get-sourcefv)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::get-sourcei))

(cffi:defcfun ("alGetSourcei" %al::get-sourcei)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-sourceiv))

(cffi:defcfun ("alGetSourceiv" %al::get-sourceiv)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::get-string))

(cffi:defcfun ("alGetString" %al::get-string)
              (claw-utils:claw-pointer %al::char)
              (%al::param %al::enum))

(declaim (inline %al::is-buffer))

(cffi:defcfun ("alIsBuffer" %al::is-buffer)
              %al::boolean
              (%al::buffer %al::uint))

(declaim (inline %al::is-enabled))

(cffi:defcfun ("alIsEnabled" %al::is-enabled)
              %al::boolean
              (%al::capability %al::enum))

(declaim (inline %al::is-extension-present))

(cffi:defcfun ("alIsExtensionPresent" %al::is-extension-present)
              %al::boolean
              (%al::extname (claw-utils:claw-pointer %al::char)))

(declaim (inline %al::is-source))

(cffi:defcfun ("alIsSource" %al::is-source)
              %al::boolean
              (%al::source %al::uint))

(declaim (inline %al::listener3f))

(cffi:defcfun ("alListener3f" %al::listener3f)
              :void
              (%al::param %al::enum)
              (%al::value1 %al::float)
              (%al::value2 %al::float)
              (%al::value3 %al::float))

(declaim (inline %al::listener3i))

(cffi:defcfun ("alListener3i" %al::listener3i)
              :void
              (%al::param %al::enum)
              (%al::value1 %al::int)
              (%al::value2 %al::int)
              (%al::value3 %al::int))

(declaim (inline %al::listenerf))

(cffi:defcfun ("alListenerf" %al::listenerf)
              :void
              (%al::param %al::enum)
              (%al::value %al::float))

(declaim (inline %al::listenerfv))

(cffi:defcfun ("alListenerfv" %al::listenerfv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::listeneri))

(cffi:defcfun ("alListeneri" %al::listeneri)
              :void
              (%al::param %al::enum)
              (%al::value %al::int))

(declaim (inline %al::listeneriv))

(cffi:defcfun ("alListeneriv" %al::listeneriv)
              :void
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::source3f))

(cffi:defcfun ("alSource3f" %al::source3f)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value1 %al::float)
              (%al::value2 %al::float)
              (%al::value3 %al::float))

(declaim (inline %al::source3i))

(cffi:defcfun ("alSource3i" %al::source3i)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value1 %al::int)
              (%al::value2 %al::int)
              (%al::value3 %al::int))

(declaim (inline %al::source-pause))

(cffi:defcfun ("alSourcePause" %al::source-pause)
              :void
              (%al::source %al::uint))

(declaim (inline %al::source-pausev))

(cffi:defcfun ("alSourcePausev" %al::source-pausev)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::source-play))

(cffi:defcfun ("alSourcePlay" %al::source-play)
              :void
              (%al::source %al::uint))

(declaim (inline %al::source-playv))

(cffi:defcfun ("alSourcePlayv" %al::source-playv)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::source-queue-buffers))

(cffi:defcfun ("alSourceQueueBuffers" %al::source-queue-buffers)
              :void
              (%al::source %al::uint)
              (%al::nb %al::sizei)
              (%al::buffers (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::source-rewind))

(cffi:defcfun ("alSourceRewind" %al::source-rewind)
              :void
              (%al::source %al::uint))

(declaim (inline %al::source-rewindv))

(cffi:defcfun ("alSourceRewindv" %al::source-rewindv)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::source-stop))

(cffi:defcfun ("alSourceStop" %al::source-stop)
              :void
              (%al::source %al::uint))

(declaim (inline %al::source-stopv))

(cffi:defcfun ("alSourceStopv" %al::source-stopv)
              :void
              (%al::n %al::sizei)
              (%al::sources (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::source-unqueue-buffers))

(cffi:defcfun ("alSourceUnqueueBuffers" %al::source-unqueue-buffers)
              :void
              (%al::source %al::uint)
              (%al::nb %al::sizei)
              (%al::buffers (claw-utils:claw-pointer %al::uint)))

(declaim (inline %al::sourcef))

(cffi:defcfun ("alSourcef" %al::sourcef)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value %al::float))

(declaim (inline %al::sourcefv))

(cffi:defcfun ("alSourcefv" %al::sourcefv)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::float)))

(declaim (inline %al::sourcei))

(cffi:defcfun ("alSourcei" %al::sourcei)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::value %al::int))

(declaim (inline %al::sourceiv))

(cffi:defcfun ("alSourceiv" %al::sourceiv)
              :void
              (%al::source %al::uint)
              (%al::param %al::enum)
              (%al::values (claw-utils:claw-pointer %al::int)))

(declaim (inline %al::speed-of-sound))

(cffi:defcfun ("alSpeedOfSound" %al::speed-of-sound)
              :void
              (%al::value %al::float))

(cffi:defctype %al::byte :char)

(cffi:defctype %al::short :short)

(cffi:defctype %al::ubyte :unsigned-char)

(cffi:defctype %al::ushort :unsigned-short)

(eval-when (:load-toplevel :compile-toplevel :execute)
  (export '%al::+paused+ :%al)
  (export '%al::is-buffer :%al)
  (export '%al::+buffers-queued+ :%al)
  (export '%al::uint :%al)
  (export '%al::+source-type+ :%al)
  (export '%al::sizei :%al)
  (export '%al::get-buffer3i :%al)
  (export '%al::bufferiv :%al)
  (export '%al::get-listeneri :%al)
  (export '%al::+max-distance+ :%al)
  (export '%al::is-extension-present :%al)
  (export '%al::+doppler-velocity+ :%al)
  (export '%al::+illegal-enum+ :%al)
  (export '%al::buffer-data :%al)
  (export '%al::+buffer+ :%al)
  (export '%al::+exponent-distance-clamped+ :%al)
  (export '%al::get-listenerf :%al)
  (export '%al::+cone-outer-angle+ :%al)
  (export '%al::get-double :%al)
  (export '%al::source-playv :%al)
  (export '%al::get-bufferi :%al)
  (export '%al::is-enabled :%al)
  (export '%al::+channels+ :%al)
  (export '%al::+size+ :%al)
  (export '%al::+max-gain+ :%al)
  (export '%al::+invalid-name+ :%al)
  (export '%al::+illegal-command+ :%al)
  (export '%al::+linear-distance-clamped+ :%al)
  (export '%al::disable :%al)
  (export '%al::buffer3i :%al)
  (export '%al::+apientry+ :%al)
  (export '%al::+cone-inner-angle+ :%al)
  (export '%al::byte :%al)
  (export '%al::listeneri :%al)
  (export '%al::get-source3f :%al)
  (export '%al::+velocity+ :%al)
  (export '%al::+pending+ :%al)
  (export '%al::+sample-offset+ :%al)
  (export '%al::+reference-distance+ :%al)
  (export '%al::get-sourceiv :%al)
  (export '%al::get-sourcefv :%al)
  (export '%al::doppler-velocity :%al)
  (export '%al::delete-sources :%al)
  (export '%al::+version-1-1+ :%al)
  (export '%al::sourcei :%al)
  (export '%al::+source-state+ :%al)
  (export '%al::sourceiv :%al)
  (export '%al::source3i :%al)
  (export '%al::get-listener3i :%al)
  (export '%al::source-play :%al)
  (export '%al::source3f :%al)
  (export '%al::source-rewind :%al)
  (export '%al::+false+ :%al)
  (export '%al::+extensions+ :%al)
  (export '%al::ushort :%al)
  (export '%al::get-enum-value :%al)
  (export '%al::+renderer+ :%al)
  (export '%al::bufferf :%al)
  (export '%al::+min-gain+ :%al)
  (export '%al::delete-buffers :%al)
  (export '%al::speed-of-sound :%al)
  (export '%al::listener3f :%al)
  (export '%al::+gain+ :%al)
  (export '%al::source-stopv :%al)
  (export '%al::+doppler-factor+ :%al)
  (export '%al::bufferfv :%al)
  (export '%al::+inverse-distance-clamped+ :%al)
  (export '%al::+exponent-distance+ :%al)
  (export '%al::+no-error+ :%al)
  (export '%al::enum :%al)
  (export '%al::+streaming+ :%al)
  (export '%al::+undetermined+ :%al)
  (export '%al::sourcefv :%al)
  (export '%al::int :%al)
  (export '%al::double :%al)
  (export '%al::source-stop :%al)
  (export '%al::bufferi :%al)
  (export '%al::source-unqueue-buffers :%al)
  (export '%al::get-float :%al)
  (export '%al::distance-model :%al)
  (export '%al::get-integerv :%al)
  (export '%al::+frequency+ :%al)
  (export '%al::doppler-factor :%al)
  (export '%al::get-sourcef :%al)
  (export '%al::+direction+ :%al)
  (export '%al::boolean :%al)
  (export '%al::+none+ :%al)
  (export '%al::get-integer :%al)
  (export '%al::get-floatv :%al)
  (export '%al::+initial+ :%al)
  (export '%al::listenerfv :%al)
  (export '%al::+out-of-memory+ :%al)
  (export '%al::get-doublev :%al)
  (export '%al::buffer3f :%al)
  (export '%al::+version-1-0+ :%al)
  (export '%al::char :%al)
  (export '%al::gen-sources :%al)
  (export '%al::listeneriv :%al)
  (export '%al::+linear-distance+ :%al)
  (export '%al::get-listeneriv :%al)
  (export '%al::+source-relative+ :%al)
  (export '%al::+processed+ :%al)
  (export '%al::+format-stereo8+ :%al)
  (export '%al::+inverse-distance+ :%al)
  (export '%al::+bits+ :%al)
  (export '%al::get-bufferfv :%al)
  (export '%al::short :%al)
  (export '%al::+pitch+ :%al)
  (export '%al::+playing+ :%al)
  (export '%al::float :%al)
  (export '%al::enable :%al)
  (export '%al::+position+ :%al)
  (export '%al::+true+ :%al)
  (export '%al::+invalid+ :%al)
  (export '%al::is-source :%al)
  (export '%al::+orientation+ :%al)
  (export '%al::+speed-of-sound+ :%al)
  (export '%al::ubyte :%al)
  (export '%al::+cone-outer-gain+ :%al)
  (export '%al::+format-mono8+ :%al)
  (export '%al::source-rewindv :%al)
  (export '%al::+api+ :%al)
  (export '%al::+%h+ :%al)
  (export '%al::+format-stereo16+ :%al)
  (export '%al::+version+ :%al)
  (export '%al::source-queue-buffers :%al)
  (export '%al::source-pause :%al)
  (export '%al::+buffers-processed+ :%al)
  (export '%al::+invalid-operation+ :%al)
  (export '%al::get-booleanv :%al)
  (export '%al::+invalid-value+ :%al)
  (export '%al::gen-buffers :%al)
  (export '%al::get-buffer3f :%al)
  (export '%al::get-sourcei :%al)
  (export '%al::+stopped+ :%al)
  (export '%al::get-string :%al)
  (export '%al::sourcef :%al)
  (export '%al::+distance-model+ :%al)
  (export '%al::listenerf :%al)
  (export '%al::void :%al)
  (export '%al::+rolloff-factor+ :%al)
  (export '%al::get-source3i :%al)
  (export '%al::+unused+ :%al)
  (export '%al::+sec-offset+ :%al)
  (export '%al::source-pausev :%al)
  (export '%al::+vendor+ :%al)
  (export '%al::+static+ :%al)
  (export '%al::get-listener3f :%al)
  (export '%al::get-bufferiv :%al)
  (export '%al::get-listenerfv :%al)
  (export '%al::+invalid-enum+ :%al)
  (export '%al::get-proc-address :%al)
  (export '%al::listener3i :%al)
  (export '%al::+looping+ :%al)
  (export '%al::get-boolean :%al)
  (export '%al::get-bufferf :%al)
  (export '%al::get-error :%al)
  (export '%al::+byte-offset+ :%al)
  (export '%al::+format-mono16+ :%al))

